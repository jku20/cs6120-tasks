digraph cfg {
"{
  op: const,
  dest: n,
  type: int,
  value: 50
}
{
  op: const,
  dest: v2,
  type: int,
  value: 1
}
{
  op: id,
  dest: i,
  type: int,
  args: [
    v2
  ]
}" -> "{
  label: for.cond.1
}
{
  op: id,
  dest: v3,
  type: int,
  args: [
    i
  ]
}
{
  op: id,
  dest: v4,
  type: int,
  args: [
    n
  ]
}
{
  op: lt,
  dest: v5,
  type: bool,
  args: [
    v3,
    v4
  ]
}
{
  op: br,
  args: [
    v5
  ],
  labels: [
    for.body.1,
    for.end.1
  ]
}"
"{
  label: for.cond.1
}
{
  op: id,
  dest: v3,
  type: int,
  args: [
    i
  ]
}
{
  op: id,
  dest: v4,
  type: int,
  args: [
    n
  ]
}
{
  op: lt,
  dest: v5,
  type: bool,
  args: [
    v3,
    v4
  ]
}
{
  op: br,
  args: [
    v5
  ],
  labels: [
    for.body.1,
    for.end.1
  ]
}" -> "{
  label: for.body.1
}
{
  op: id,
  dest: v6,
  type: int,
  args: [
    i
  ]
}
{
  op: call,
  dest: isPrime,
  type: bool,
  args: [
    v6
  ],
  funcs: [
    checkPrime
  ]
}
{
  op: id,
  dest: isPrime,
  type: bool,
  args: [
    isPrime
  ]
}
{
  op: id,
  dest: v8,
  type: bool,
  args: [
    isPrime
  ]
}
{
  op: br,
  args: [
    v8
  ],
  labels: [
    then.7,
    else.7
  ]
}"
"{
  label: for.cond.1
}
{
  op: id,
  dest: v3,
  type: int,
  args: [
    i
  ]
}
{
  op: id,
  dest: v4,
  type: int,
  args: [
    n
  ]
}
{
  op: lt,
  dest: v5,
  type: bool,
  args: [
    v3,
    v4
  ]
}
{
  op: br,
  args: [
    v5
  ],
  labels: [
    for.body.1,
    for.end.1
  ]
}" -> "{
  label: for.end.1
}"
"{
  label: for.body.1
}
{
  op: id,
  dest: v6,
  type: int,
  args: [
    i
  ]
}
{
  op: call,
  dest: isPrime,
  type: bool,
  args: [
    v6
  ],
  funcs: [
    checkPrime
  ]
}
{
  op: id,
  dest: isPrime,
  type: bool,
  args: [
    isPrime
  ]
}
{
  op: id,
  dest: v8,
  type: bool,
  args: [
    isPrime
  ]
}
{
  op: br,
  args: [
    v8
  ],
  labels: [
    then.7,
    else.7
  ]
}" -> "{
  label: then.7
}
{
  op: const,
  dest: v9,
  type: int,
  value: 1
}
{
  op: print,
  args: [
    v9
  ]
}
{
  op: const,
  dest: v10,
  type: int,
  value: 0
}
{
  op: jmp,
  labels: [
    endif.7
  ]
}"
"{
  label: for.body.1
}
{
  op: id,
  dest: v6,
  type: int,
  args: [
    i
  ]
}
{
  op: call,
  dest: isPrime,
  type: bool,
  args: [
    v6
  ],
  funcs: [
    checkPrime
  ]
}
{
  op: id,
  dest: isPrime,
  type: bool,
  args: [
    isPrime
  ]
}
{
  op: id,
  dest: v8,
  type: bool,
  args: [
    isPrime
  ]
}
{
  op: br,
  args: [
    v8
  ],
  labels: [
    then.7,
    else.7
  ]
}" -> "{
  label: else.7
}
{
  op: const,
  dest: v11,
  type: int,
  value: 0
}
{
  op: print,
  args: [
    v11
  ]
}
{
  op: const,
  dest: v12,
  type: int,
  value: 0
}"
"{
  label: then.7
}
{
  op: const,
  dest: v9,
  type: int,
  value: 1
}
{
  op: print,
  args: [
    v9
  ]
}
{
  op: const,
  dest: v10,
  type: int,
  value: 0
}
{
  op: jmp,
  labels: [
    endif.7
  ]
}" -> "{
  label: endif.7
}
{
  op: id,
  dest: v13,
  type: int,
  args: [
    i
  ]
}
{
  op: const,
  dest: v14,
  type: int,
  value: 1
}
{
  op: add,
  dest: v15,
  type: int,
  args: [
    v13,
    v14
  ]
}
{
  op: id,
  dest: i,
  type: int,
  args: [
    v15
  ]
}
{
  op: jmp,
  labels: [
    for.cond.1
  ]
}"
"{
  label: else.7
}
{
  op: const,
  dest: v11,
  type: int,
  value: 0
}
{
  op: print,
  args: [
    v11
  ]
}
{
  op: const,
  dest: v12,
  type: int,
  value: 0
}" -> "{
  label: endif.7
}
{
  op: id,
  dest: v13,
  type: int,
  args: [
    i
  ]
}
{
  op: const,
  dest: v14,
  type: int,
  value: 1
}
{
  op: add,
  dest: v15,
  type: int,
  args: [
    v13,
    v14
  ]
}
{
  op: id,
  dest: i,
  type: int,
  args: [
    v15
  ]
}
{
  op: jmp,
  labels: [
    for.cond.1
  ]
}"
"{
  label: endif.7
}
{
  op: id,
  dest: v13,
  type: int,
  args: [
    i
  ]
}
{
  op: const,
  dest: v14,
  type: int,
  value: 1
}
{
  op: add,
  dest: v15,
  type: int,
  args: [
    v13,
    v14
  ]
}
{
  op: id,
  dest: i,
  type: int,
  args: [
    v15
  ]
}
{
  op: jmp,
  labels: [
    for.cond.1
  ]
}" -> "{
  label: for.cond.1
}
{
  op: id,
  dest: v3,
  type: int,
  args: [
    i
  ]
}
{
  op: id,
  dest: v4,
  type: int,
  args: [
    n
  ]
}
{
  op: lt,
  dest: v5,
  type: bool,
  args: [
    v3,
    v4
  ]
}
{
  op: br,
  args: [
    v5
  ],
  labels: [
    for.body.1,
    for.end.1
  ]
}"
}
